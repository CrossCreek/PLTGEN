/*=============================================================================================
 * CLASSIFICATION: Unclassified
 * Government Purpose Rights
 * Contract No: 12-C-0158
 * Contractor Name: Perspecta
 * Contractor Address: 15052 Conference Center Dr. Chantilly, VA 20151
 * Expiration Date: 31 Aug. 2023
 * The Government's rights to use, modify, reproduce, release, perform, display, or disclose these
 * technical data and computer software are restricted by paragraph (b)(1) of clause N52.227-002,
 * Rights in Technical Data and Computer Software: Noncommercial Items, contained in the contract
 * identified above. No restrictions apply after the expiration date shown above. Any reproduction of
 * technical data or computer software, or portions thereof marked with this legend,must also reproduce the markings.
 *
 *
 * TimelineReport.h
 *
 * PLTGEN - Positions, Links, Timeline GENerator
 *
 * POC: Anthony Ragusa | Joe DiBruno | Ken Ivory (2018- )
 *============================================================================================*/


#ifndef TIMELINE_REPORT_H
#define TIMELINE_REPORT_H "TimelineReport"

#include <fstream>
#include <string>
#include <map>
#include <list>
#include <memory>

#include "mural/MURALTypes.h"

template<class Type> class LinkList;
template<class Type> class Array;

class UserVehicle;
class ValueTimelineElement;

using namespace std;

/**
 * Class to write the timeline.out file containing detailed information about the user timeline generated by
 * MURAL.
 *
 * Example Header:
 *    USER    TIME  OVER         SCORE CRI  IMAG SEN MSN      TTC      BITS SUB
 *
 * @author Brian Fowler
 * @date 11/18/11
 */
class TimelineReport
{
public:

    TimelineReport(const std::string &outFile,
                   const shared_ptr<MURALTypes::UserVector> &ptrUserList );
    /**
     * Destructor
     */
    ~TimelineReport();

    /**
     * Creates the "standard" request.out report
     */
    void CreateReport();

protected:

private:




    /**
     * Loops on the Value timeline elements of the user and prints them
     */
    void PrintValueTimeline(const UserVehicle &user);

    /**
     * Prints an individual timeline element
     */
    void PrintElement(const ValueTimelineElement &element);

    shared_ptr<MURALTypes::UserVector> ptrUserList_a;

    std::string outputFileName_a;
    std::ofstream outfileStream_a;
};

//CPPCHECK_RELATED
//Removed GetClassName() since it wasn't called in code base
/*
inline
std::string
TimelineReport::GetClassName()
{
    return(TIMELINE_REPORT_H);
}
*/

#endif
